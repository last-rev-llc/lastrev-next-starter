#! /usr/bin/env node
require('regenerator-runtime/runtime');
require('dotenv').config();

const _ = require('lodash');
const { promisify } = require('util');
const { exists: e, mkdir: m, writeFile: w } = require('fs');
const { join } = require('path');

const { default: Contentful } = require('./dist/src/integrations/contentful');

const urlMap = JSON.stringify(
  {
    pageGeneral: {
      url: '/[key]',
      key: 'slug'
    }
  },
  null,
  2
);

const { getStaticSlugsForContentType, getGlobalSettings } = Contentful({ urlMap });

const exists = promisify(e);
const mkdir = promisify(m);
const writeFile = promisify(w);

const CONTENT_DIR = './content-cache';
const PATHS_JSON_FILE = join(CONTENT_DIR, 'paths.json');
const SETTINGS_JSON_FILE = join(CONTENT_DIR, 'settings.json');
const URL_MAP_JSON_FILE = join(CONTENT_DIR, 'urlmap.json');
const PAGE_GENERAL = 'pageGeneral';

const mkdirIfNotExists = async () => {
  if (!(await exists(CONTENT_DIR))) {
    mkdir(CONTENT_DIR);
  }
};

const writePathsJson = async ({ pageGeneralSlugs }) => {
  const firstLevelPaths = _.map(pageGeneralSlugs, (slug) => ({ params: { slug } }));
  const out = JSON.stringify({ '/': firstLevelPaths }, null, 2);
  writeFile(PATHS_JSON_FILE, out);
};

const writeSettingsJson = async (globalSettings) => {
  const out = JSON.stringify(globalSettings, null, 2);
  writeFile(SETTINGS_JSON_FILE, out);
};

// TODO: this should be dynamic, based on taxonomy content model
const writeUrlMapJson = async () => {
  writeFile(URL_MAP_JSON_FILE, urlMap);
};

const build = async () => {
  await mkdirIfNotExists();

  const globalSettings = await getGlobalSettings();

  // const [pageGeneralSlugs, globalSettings] = await Promise.all([
  //   getStaticSlugsForContentType(PAGE_GENERAL),
  //   getGlobalSettings()
  // ]);

  // await Promise.all([writePathsJson({ pageGeneralSlugs }), writeSettingsJson(globalSettings), writeUrlMapJson()]);
  await Promise.all([writeSettingsJson(globalSettings), writeUrlMapJson()]);
};

build()
  .then('Successfully wrote content files')
  .catch((err) => {
    console.log(err);
    process.stderr.write(`Unable to write content files:\n${err.message}`);
  });
